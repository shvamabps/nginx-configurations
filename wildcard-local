# WebSocket support (needed by Jenkins)
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Redirect all HTTP *.local traffic to HTTPS
server {
    listen 80;  # No default_server here to avoid conflict
    server_name .local;
    return 301 https://$host$request_uri;
}

# üîê BLOCK all direct IP-based access (any unknown hostname or IP access)
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate /etc/nginx/ssl/local.crt;
    ssl_certificate_key /etc/nginx/ssl/local.key;

    # Deny IP-based or unknown domain access
    return 444;
}

# Jenkins upstream
upstream jenkins {
    keepalive 32;
    server 127.0.0.1:8080;
}

# üîê pgadmin.local ‚Äî restrict access to valid domain only
server {
    listen 443 ssl;
    server_name pgadmin.local;

    ssl_certificate /etc/nginx/ssl/local.crt;
    ssl_certificate_key /etc/nginx/ssl/local.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    access_log /var/log/nginx/pgadmin_access.log;
    error_log /var/log/nginx/pgadmin_error.log;

    location / {
        proxy_pass http://localhost:5050;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# üîê jenkins.local ‚Äî with WebSocket support
server {
    listen 443 ssl;
    server_name jenkins.local;

    ssl_certificate /etc/nginx/ssl/local.crt;
    ssl_certificate_key /etc/nginx/ssl/local.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    root /var/run/jenkins/war/;
    access_log /var/log/nginx/jenkins_access.log;
    error_log /var/log/nginx/jenkins_error.log;

    ignore_invalid_headers off;

    location ~ "^/static/[0-9a-fA-F]{8}/(.*)$" {
        rewrite "^/static/[0-9a-fA-F]{8}/(.*)" /$1 last;
    }

    location /userContent {
        root /var/lib/jenkins/;
        try_files $uri =404;
        sendfile on;
        limit_except GET HEAD {
            deny all;
        }
    }

    location / {
        sendfile off;
        proxy_pass http://jenkins;
        proxy_redirect default;
        proxy_http_version 1.1;

        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade $http_upgrade;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_max_temp_file_size 0;
        client_max_body_size 10m;
        client_body_buffer_size 128k;

        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
        proxy_request_buffering off;
    }
}

# üîê Wildcard static domain for *.local
server {
    listen 443 ssl;
    server_name ~^(?<subdomain>.+)\.local$;

    ssl_certificate /etc/nginx/ssl/local.crt;
    ssl_certificate_key /etc/nginx/ssl/local.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    access_log /var/log/nginx/wildcard_access.log;
    error_log /var/log/nginx/wildcard_error.log;

    # Block explicitly routed subdomains
    if ($host ~* "^(pgadmin|jenkins)\.local$") {
        return 444;
    }

    root /var/www/local/$subdomain;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
        limit_except GET HEAD {
            deny all;
        }
    }
}
